#include <iostream>
#define SIZE 2

class Matrix {
private:
    int mat[SIZE][SIZE];

public:
    Matrix(int arr[SIZE][SIZE]) {
        for (int i = 0; i < SIZE; i++)
            for (int j = 0; j < SIZE; j++)
                mat[i][j] = arr[i][j];
    }

    Matrix operator*(const Matrix& other) {
        Matrix result = {0};
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                result.mat[i][j] = 0;
                for (int k = 0; k < SIZE; k++) {
                    result.mat[i][j] += mat[i][k] * other.mat[k][j];
                }
            }
        }
        return result;
    }

    void display() const {
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                std::cout << mat[i][j] << " ";
            }
            std::cout << std::endl;
        }
    }
};

int main() {
    int arr1[SIZE][SIZE] = {{1, 2}, {3, 4}};
    int arr2[SIZE][SIZE] = {{5, 6}, {7, 8}};

    Matrix mat1(arr1);
    Matrix mat2(arr2);

    Matrix result = mat1 * mat2;
    result.display();

    return 0;
}